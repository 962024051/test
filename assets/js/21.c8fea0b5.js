(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{373:function(t,a,e){"use strict";e.r(a);var s=e(42),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"分页媒体"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分页媒体"}},[t._v("#")]),t._v(" 分页媒体")]),t._v(" "),e("h2",{attrs:{id:"属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),e("h3",{attrs:{id:"元素之后分页符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#元素之后分页符"}},[t._v("#")]),t._v(" 元素之后分页符")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("page-break-after：auto | always | avoid | left | right | recto | verso\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("属性值")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("auto")]),t._v(" "),e("td",[t._v("初始值。 自动分页符")])]),t._v(" "),e("tr",[e("td",[t._v("always")]),t._v(" "),e("td",[t._v("始终在元素后强制分页")])]),t._v(" "),e("tr",[e("td",[t._v("avoid")]),t._v(" "),e("td",[t._v("避免在元素后出现分页符")])]),t._v(" "),e("tr",[e("td",[t._v("left")]),t._v(" "),e("td",[t._v("在元素之后足够的分页符，一直到一张空白的左页为止")])]),t._v(" "),e("tr",[e("td",[t._v("right")]),t._v(" "),e("td",[t._v("在元素之后足够的分页符，一直到一张空白的右页为止")])]),t._v(" "),e("tr",[e("td",[t._v("recto")]),t._v(" "),e("td",[t._v("如果页面从左到右前进，则其行为类似于"),e("code",[t._v("right")]),t._v("。如果页面从右到左前进，则其行为类似于"),e("code",[t._v("left")]),t._v("。")])]),t._v(" "),e("tr",[e("td",[t._v("verso")]),t._v(" "),e("td",[t._v("如果页面从左到右前进，则其行为类似于"),e("code",[t._v("left")]),t._v("。如果页面从右到左前进，则其行为类似于"),e("code",[t._v("right")]),t._v("。")])])])]),t._v(" "),e("h3",{attrs:{id:"当前元素之内分页符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#当前元素之内分页符"}},[t._v("#")]),t._v(" 当前元素之内分页符")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("page-break-inside: auto | avoid\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("属性值")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("auto")]),t._v(" "),e("td",[t._v("初始值。 自动分页符")])]),t._v(" "),e("tr",[e("td",[t._v("avoid")]),t._v(" "),e("td",[t._v("避免在元素内分页符")])])])]),t._v(" "),e("h3",{attrs:{id:"元素之前分页符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#元素之前分页符"}},[t._v("#")]),t._v(" 元素之前分页符")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("page-break-before：auto | always | avoid | left | right | recto | verso\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("属性值")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("auto")]),t._v(" "),e("td",[t._v("初始值。 自动分页符")])]),t._v(" "),e("tr",[e("td",[t._v("always")]),t._v(" "),e("td",[t._v("始终在元素之前强制分页")])]),t._v(" "),e("tr",[e("td",[t._v("avoid")]),t._v(" "),e("td",[t._v("避免在元素之前出现分页符")])]),t._v(" "),e("tr",[e("td",[t._v("left")]),t._v(" "),e("td",[t._v("在元素之前足够的分页符，一直到一张空白的左页为止")])]),t._v(" "),e("tr",[e("td",[t._v("right")]),t._v(" "),e("td",[t._v("在元素之前足够的分页符，一直到一张空白的右页为止")])]),t._v(" "),e("tr",[e("td",[t._v("recto")]),t._v(" "),e("td",[t._v("如果页面从左到右前进，则其行为类似于"),e("code",[t._v("right")]),t._v("。如果页面从右到左前进，则其行为类似于"),e("code",[t._v("left")]),t._v("。")])]),t._v(" "),e("tr",[e("td",[t._v("verso")]),t._v(" "),e("td",[t._v("如果页面从左到右前进，则其行为类似于"),e("code",[t._v("left")]),t._v("。如果页面从右到左前进，则其行为类似于"),e("code",[t._v("right")]),t._v("。")])])])]),t._v(" "),e("h2",{attrs:{id:"规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#规则"}},[t._v("#")]),t._v(" 规则")]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token atrule"}},[e("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@page")]),t._v(" <page-selector-list>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  <page-body>\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nwhere \n<page-selector-list> = [ <page-selector># ]?\n<page-body> = <declaration>? [ "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" <page-body> ]? | <page-margin-box> <page-body>\n\nwhere \n<page-selector> = <pseudo-page>+ | <ident> <pseudo-page>*\n<page-margin-box> = <page-margin-box-type> "),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v("'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("' <declaration-list> '")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("'\n\nwhere \n<pseudo-page> = "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" [ left | right | first | blank ]\n<page-margin-box-type> = "),e("span",{pre:!0,attrs:{class:"token atrule"}},[e("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@top-left-corner")]),t._v(" | @top-left | @top-center | @top-right | @top-right-corner | @bottom-left-corner | @bottom-left | @bottom-center | @bottom-right | @bottom-right-corner | @left-top | @left-middle | @left-bottom | @right-top | @right-middle | @right-bottom\n\n\n@page")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1cm"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token atrule"}},[e("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@page")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("first")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2cm"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("实验技术")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("属性值")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("size")]),t._v(" "),e("td",[t._v("指定页面盒模型所在的容器的大小和方向。"),e("br"),t._v("一般情况下，因为一个页面盒模型被渲染到一面纸张上，所以这个属性也指示了目标纸张的大小")])]),t._v(" "),e("tr",[e("td",[t._v("marks")]),t._v(" "),e("td",[t._v("向文档添加剪切标记和/或注册标记。")])]),t._v(" "),e("tr",[e("td",[t._v("bleed")]),t._v(" "),e("td",[t._v("页面框盒指定一个限制区域，超过这个区域的页面内容将被裁剪")])])])])])}),[],!1,null,null,null);a.default=r.exports}}]);