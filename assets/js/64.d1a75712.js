(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{416:function(t,e,a){"use strict";a.r(e);var _=a(42),s=Object(_.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"定时速度功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定时速度功能"}},[t._v("#")]),t._v(" 定时速度功能")]),t._v(" "),a("h2",{attrs:{id:"函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[t._v("#")]),t._v(" 函数")]),t._v(" "),a("h3",{attrs:{id:"立方贝塞尔曲线"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#立方贝塞尔曲线"}},[t._v("#")]),t._v(" 立方贝塞尔曲线")]),t._v(" "),a("p",[t._v("曲线是连续的，一般用于动画的平滑变换，也被称为缓动函数")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("cubic-bezier(x1, y1, x2, y2)\n\nx1, y1, x2, y2是<number>类型的值，它们代表当前定义立方贝塞尔曲线中的P1 和 P2点的横坐标和纵坐\n\n一条立方贝塞尔曲线需要四个点来定义，P0 、P1 、P2 和 P3。P0 和 P3 是起点和终点，这两个点被作为比例固定在坐标系上，横轴为时间比例，纵轴为完成状态。P0 是 (0, 0)，表示初始时间和初始状态。P3 是 (1, 1) ，表示终止时间和终止状态\n\nP0：起点默认值 (0, 0)\nP1：动态取值 (x1, y1)\nP2：动态取值 (x2, y2)\nP3：终点默认值 (1, 1)\n")])])]),a("h3",{attrs:{id:"步进速度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步进速度"}},[t._v("#")]),t._v(" 步进速度")]),t._v(" "),a("p",[t._v("定义了一个以等距步长划分值域的步长函数。这个阶跃函数的子类有时也称为阶梯函数。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("steps(number_of_steps, direction)\nnumber_of_steps 步数 整型类型\ndirection       关键字   \n\t\t\t\t\tump-start 表示左连续函数，以便动画开始时发生第一步或跳转；\n\t\t\t\t\tjump-end 表示一个右连续函数，以便在动画结束时发生最后一步或跳转；\n\t\t\t\t\tjump-both 表示左右连续功能，包括在0％和100％标记处的停顿，有效地在动画迭代过程中添加了一步；\n\t\t\t\t\tjump-none两端均无跳跃。而是同时按住0％和100％标记，持续时间均为1 / n\n\t\t\t\t\tstart 等于 jump-start\n\t\t\t\t\tend 等于 jump-end\n\t\t\t\t\tend 是默认值。\n")])])]),a("h2",{attrs:{id:"关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关键字"}},[t._v("#")]),t._v(" 关键字")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("关键字")]),t._v(" "),a("th",[t._v("函数")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("linear")]),t._v(" "),a("td",[t._v("cubic-bezier(0,0,1,1)")]),t._v(" "),a("td",[t._v("规定以相同速度开始至结束的过渡效果")])]),t._v(" "),a("tr",[a("td",[t._v("ease")]),t._v(" "),a("td",[t._v("cubic-bezier(0.25,0.1,0.25,1)")]),t._v(" "),a("td",[t._v("开始慢，然后快，慢下来，结束时非常慢")])]),t._v(" "),a("tr",[a("td",[t._v("ease-in")]),t._v(" "),a("td",[t._v("cubic-bezier(0.42,0,1,1)")]),t._v(" "),a("td",[t._v("开始慢，结束快")])]),t._v(" "),a("tr",[a("td",[t._v("ease-out")]),t._v(" "),a("td",[t._v("cubic-bezier(0,0,0.58,1)")]),t._v(" "),a("td",[t._v("开始快，结束慢")])]),t._v(" "),a("tr",[a("td",[t._v("ease-in-out")]),t._v(" "),a("td",[t._v("cubic-bezier(0.42,0,0.58,1)")]),t._v(" "),a("td",[t._v("中间快，两边慢")])]),t._v(" "),a("tr",[a("td",[t._v("step-start")]),t._v(" "),a("td",[t._v("steps(1, start)")]),t._v(" "),a("td",[t._v("动画会立刻跳转到结束状态，"),a("br"),t._v("并一直停留在结束状态直到动画结束")])]),t._v(" "),a("tr",[a("td",[t._v("step-end")]),t._v(" "),a("td",[t._v("steps(1, end)")]),t._v(" "),a("td",[t._v("动画会一直保持初始状态直到动画结束，"),a("br"),t._v("然后立刻跳转到结束状态")])])])])])}),[],!1,null,null,null);e.default=s.exports}}]);