(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{447:function(t,a,s){"use strict";s.r(a);var e=s(42),v=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"主要表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#主要表达式"}},[t._v("#")]),t._v(" 主要表达式")]),t._v(" "),s("h2",{attrs:{id:"this"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#this"}},[t._v("#")]),t._v(" this")]),t._v(" "),s("p",[t._v("指向函数的执行上下文。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("this\n")])])]),s("h2",{attrs:{id:"function"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#function"}},[t._v("#")]),t._v(" function")]),t._v(" "),s("p",[t._v("函数表达式")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("function [name]([param1[, param2[, ..., paramN]]]) {\n   statements\n};\n\nfunction 函数名称(参数列表){\n函数体语句\n}\n")])])]),s("table",[s("thead",[s("tr",[s("th",[t._v("语法")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("name")]),t._v(" "),s("td",[t._v("函数名称")])]),t._v(" "),s("tr",[s("td",[t._v("param")]),t._v(" "),s("td",[t._v("参数列表，一个函数至多拥有 255 个参数")])]),t._v(" "),s("tr",[s("td",[t._v("statements")]),t._v(" "),s("td",[t._v("函数体语句")])])])]),t._v(" "),s("h2",{attrs:{id:"class"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#class"}},[t._v("#")]),t._v(" class")]),t._v(" "),s("p",[t._v("类表达式")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("class [className] [extends] {\n  // class body\n};\n")])])]),s("table",[s("thead",[s("tr",[s("th",[t._v("语法")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("className")]),t._v(" "),s("td",[t._v("类名称")])]),t._v(" "),s("tr",[s("td",[t._v("extends")]),t._v(" "),s("td",[t._v("几曾表达式")])]),t._v(" "),s("tr",[s("td",[t._v("class body")]),t._v(" "),s("td",[t._v("类语句")])])])]),t._v(" "),s("h2",{attrs:{id:"function-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#function-2"}},[t._v("#")]),t._v(" function*")]),t._v(" "),s("p",[t._v("generator 函数表达式")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("function* [name]([param1[, param2[, ..., paramN]]]) {\n   statements\n};\n\nfunction 函数名称(参数列表){\n函数体语句\n}\n")])])]),s("table",[s("thead",[s("tr",[s("th",[t._v("语法")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("name")]),t._v(" "),s("td",[t._v("函数名称")])]),t._v(" "),s("tr",[s("td",[t._v("param")]),t._v(" "),s("td",[t._v("参数列表，一个函数至多拥有 255 个参数")])]),t._v(" "),s("tr",[s("td",[t._v("statements")]),t._v(" "),s("td",[t._v("函数体语句")])])])]),t._v(" "),s("h2",{attrs:{id:"yield"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#yield"}},[t._v("#")]),t._v(" yield")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[rv] = yield [expression];\n")])])]),s("table",[s("thead",[s("tr",[s("th",[t._v("语法")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("expression")]),t._v(" "),s("td",[t._v("通过迭代器协议从生成器函数返回的值。如果省略，则返回 undefined")])]),t._v(" "),s("tr",[s("td",[t._v("rv")]),t._v(" "),s("td",[t._v("返回传递给生成器的"),s("code",[t._v("next()")]),t._v("方法的可选值，以恢复其执行。")])])])]),t._v(" "),s("h2",{attrs:{id:"yield-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#yield-2"}},[t._v("#")]),t._v(" yield*")]),t._v(" "),s("p",[t._v("委派给另外一个 generator 函数或可迭代的对象")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("yield* [[expression]];\n")])])]),s("table",[s("thead",[s("tr",[s("th",[t._v("语法")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("expression")]),t._v(" "),s("td",[t._v("返回一个可迭代对象的表达式。")])])])]),t._v(" "),s("h2",{attrs:{id:"async-function"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#async-function"}},[t._v("#")]),t._v(" async function")]),t._v(" "),s("p",[t._v("异步函数表达式")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("async function [name]([param1[, param2[, ..., paramN]]]) {\n   statements\n};\n\nfunction 函数名称(参数列表){\n函数体语句\n}\n")])])]),s("table",[s("thead",[s("tr",[s("th",[t._v("语法")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("name")]),t._v(" "),s("td",[t._v("函数名称")])]),t._v(" "),s("tr",[s("td",[t._v("param")]),t._v(" "),s("td",[t._v("参数列表，一个函数至多拥有 255 个参数")])]),t._v(" "),s("tr",[s("td",[t._v("statements")]),t._v(" "),s("td",[t._v("函数体语句")])])])]),t._v(" "),s("h2",{attrs:{id:"await"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#await"}},[t._v("#")]),t._v(" await")]),t._v(" "),s("p",[t._v("暂停或恢复执行异步函数，并等待 promise 的 resolve/reject 回调")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[返回值] = await 表达式;\n")])])]),s("table",[s("thead",[s("tr",[s("th",[t._v("语法")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("表达式")]),t._v(" "),s("td",[t._v("一个 Promise 对象或者任何要等待的值")])]),t._v(" "),s("tr",[s("td",[t._v("返回值")]),t._v(" "),s("td",[t._v("返回 Promise 对象的处理结果。如果等待的不是 Promise 对象，则返回该值本身")])])])]),t._v(" "),s("h2",{attrs:{id:"数组初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组初始化"}},[t._v("#")]),t._v(" 数组初始化")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[]\n")])])]),s("h2",{attrs:{id:"对象初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象初始化"}},[t._v("#")]),t._v(" 对象初始化")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("{}\n")])])]),s("h2",{attrs:{id:"正则表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[t._v("#")]),t._v(" 正则表达式")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("/ab+c/i\n")])])]),s("h2",{attrs:{id:"圆括号运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#圆括号运算符"}},[t._v("#")]),t._v(" 圆括号运算符")]),t._v(" "),s("p",[t._v("制表达式中的运算优先级")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("()\n")])])])])}),[],!1,null,null,null);a.default=v.exports}}]);