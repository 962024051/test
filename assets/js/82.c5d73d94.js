(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{434:function(t,a,e){"use strict";e.r(a);var v=e(42),_=Object(v.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"regexp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#regexp"}},[t._v("#")]),t._v(" RegExp")]),t._v(" "),e("h2",{attrs:{id:"构造函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#构造函数"}},[t._v("#")]),t._v(" 构造函数")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("new RegExp(pattern[, flags])\nRegExp(pattern[, flags])\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("pattern")]),t._v(" "),e("td",[t._v("正则表达式文本")])]),t._v(" "),e("tr",[e("td",[t._v("flags")]),t._v(" "),e("td",[t._v("标识符字符串(gimuy) 任意组合")])])])]),t._v(" "),e("h2",{attrs:{id:"静态属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#静态属性"}},[t._v("#")]),t._v(" 静态属性")]),t._v(" "),e("p",[t._v("访问器属性返回"),e("code",[t._v("RegExp")]),t._v(" 的构造器")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("RegExp[Symbol.species]\n")])])]),e("p",[t._v("指定下一次匹配的起始索引")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("lastIndex "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" regExpObj"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastIndex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h2",{attrs:{id:"实例属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实例属性"}},[t._v("#")]),t._v(" 实例属性")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("属性")]),t._v(" "),e("th",[t._v("返回值")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("flags")]),t._v(" "),e("td",[t._v("含有 "),e("code",[t._v("RegExp")]),t._v(" 对象 flags 的字符串")])]),t._v(" "),e("tr",[e("td",[t._v("dotAll")]),t._v(" "),e("td",[t._v('dotAll的值是布尔对象，如果使用了 "s" 标志，则返回 '),e("code",[t._v("true")]),t._v("；否则返回 `false")])]),t._v(" "),e("tr",[e("td",[t._v("global")]),t._v(" "),e("td",[t._v("global"),e("code",[t._v('的值是布尔对象，如果使用了 "')]),t._v("g"),e("code",[t._v('" 标志，则返回')]),t._v("true"),e("code",[t._v("；否则返回")]),t._v("false")])]),t._v(" "),e("tr",[e("td",[t._v("ignoreCase")]),t._v(" "),e("td",[e("code",[t._v("ignoreCase")]),t._v(' 的值是布尔对象，如果使用了"'),e("code",[t._v("i")]),t._v('" 标志，则返回 '),e("code",[t._v("true")]),t._v("；否则，返回 "),e("code",[t._v("false")]),t._v("。")])]),t._v(" "),e("tr",[e("td",[t._v("multiline")]),t._v(" "),e("td",[t._v("multiline"),e("code",[t._v('是一个布尔对象，如果使用了 "')]),t._v("m"),e("code",[t._v('" 标志，则返回')]),t._v("true"),e("code",[t._v("；否则，返回")]),t._v("false")])]),t._v(" "),e("tr",[e("td",[t._v("source")]),t._v(" "),e("td",[t._v("正则表达式的字符串文本。")])]),t._v(" "),e("tr",[e("td",[t._v("sticky")]),t._v(" "),e("td",[t._v('sticky 的值是布尔对象，如果使用了 "y" 标志，则返回 '),e("code",[t._v("true")]),t._v("；否则返回 `false")])]),t._v(" "),e("tr",[e("td",[t._v("unicode")]),t._v(" "),e("td",[t._v('unicode 的值是 Boolean，并且如果使用了 "u" 标志则为 true；否则为 false')])])])]),t._v(" "),e("h2",{attrs:{id:"实例方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实例方法"}},[t._v("#")]),t._v(" 实例方法")]),t._v(" "),e("h3",{attrs:{id:"exec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#exec"}},[t._v("#")]),t._v(" exec()")]),t._v(" "),e("p",[t._v("一个指定字符串中执行一个搜索匹配。返回一个结果数组或 null")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("regexObj.exec(str)\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("str")]),t._v(" "),e("td",[t._v("正则表达式的字符串")])]),t._v(" "),e("tr",[e("td",[t._v("返回值")]),t._v(" "),e("td",[t._v("匹配成功，返回一个数组。"),e("br"),t._v("匹配失败，返回null")])])])]),t._v(" "),e("h3",{attrs:{id:"test"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#test"}},[t._v("#")]),t._v(" test()")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("regexObj.test(str)\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("str")]),t._v(" "),e("td",[t._v("正则表达式的字符串")])]),t._v(" "),e("tr",[e("td",[t._v("返回值")]),t._v(" "),e("td",[t._v("如果正则表达式与指定的字符串匹配 ，返回"),e("code",[t._v("true")]),t._v("；否则"),e("code",[t._v("false")])])])])]),t._v(" "),e("h3",{attrs:{id:"match"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#match"}},[t._v("#")]),t._v(" "),e("strong",[e("code",[t._v("[@@match]()")])])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("regexp[Symbol.match](str)\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("str")]),t._v(" "),e("td",[t._v("正则表达式的字符串")])]),t._v(" "),e("tr",[e("td",[t._v("返回值")]),t._v(" "),e("td",[t._v("匹配成功，返回一个数组。"),e("br"),t._v("匹配失败，返回null")])])])]),t._v(" "),e("h3",{attrs:{id:"matchall"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#matchall"}},[t._v("#")]),t._v(" "),e("strong",[e("code",[t._v("[@@matchAll]()")])])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("regexp[Symbol.matchAll](str)\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("str")]),t._v(" "),e("td",[t._v("正则表达式的字符串")])]),t._v(" "),e("tr",[e("td",[t._v("返回值")]),t._v(" "),e("td",[t._v("匹配成功，返回一个迭代器。"),e("br"),t._v("匹配失败，返回null")])])])]),t._v(" "),e("h3",{attrs:{id:"replace"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#replace"}},[t._v("#")]),t._v(" "),e("strong",[e("code",[t._v("[@@replace]()")])])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("regexp[Symbol.replace](str, newSubStr|function)\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("str")]),t._v(" "),e("td",[t._v("正则表达式的字符串")])]),t._v(" "),e("tr",[e("td",[t._v("newSubStr")]),t._v(" "),e("td",[t._v("替换的字符串")])]),t._v(" "),e("tr",[e("td",[t._v("function")]),t._v(" "),e("td",[t._v("替换的回调函数的字符串")])]),t._v(" "),e("tr",[e("td",[t._v("返回值")]),t._v(" "),e("td",[t._v("用替换器替换相应匹配项后的新字符串")])])])]),t._v(" "),e("h3",{attrs:{id:"search"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#search"}},[t._v("#")]),t._v(" "),e("strong",[e("code",[t._v("[@@search]()")])])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("regexp[Symbol.search](str)\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("str")]),t._v(" "),e("td",[t._v("正则表达式的字符串")])]),t._v(" "),e("tr",[e("td",[t._v("返回值")]),t._v(" "),e("td",[t._v("搜索成功，返回一个索引位置。"),e("br"),t._v("搜索失败，返回-1")])])])]),t._v(" "),e("h3",{attrs:{id:"split"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#split"}},[t._v("#")]),t._v(" "),e("strong",[e("code",[t._v("[@@split]()")])])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("regexp[Symbol.split](str[, limit])\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("str")]),t._v(" "),e("td",[t._v("切割操作的目标字符串")])]),t._v(" "),e("tr",[e("td",[t._v("limit(可选)")]),t._v(" "),e("td",[t._v("限制切割数量的特定整数")])]),t._v(" "),e("tr",[e("td",[t._v("返回值")]),t._v(" "),e("td",[t._v("成功，返回一个数组。"),e("br"),t._v("失败，返回-1")])])])]),t._v(" "),e("h3",{attrs:{id:"tostring"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tostring"}},[t._v("#")]),t._v(" toString()")]),t._v(" "),e("p",[t._v("返回一个表示该正则表达式的字符串")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("regexObj.toString()\n")])])])])}),[],!1,null,null,null);a.default=_.exports}}]);